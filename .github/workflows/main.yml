name: CI/CD Pipeline for nginx-app # Имя конвеера

on:                 # Триггер, по которому будет запускаться конвеер
  push:             # Запускает рабочий процесс по событиям push запросов
    branches: main  # В какую ветку обращается конвеер
    tags:
      - 'v*'

env:                             # Описание переменных
  IMAGE: slavazakariev/nginx-app # Переменная образа в Docker Hub
  RELEASE_NAME: nginx-app        # Переменная приложения в Docker Hub
  NAMESPACE: monitoring          # Переменная пространства имён в Kubernetes

jobs:                             # Задачи, которые будут выполняться в рамках конвеера
  build-and-push:                 # Тип задачи - Сборка и Публикация
    name: Build Docker image      # Имя задачи - Сборка образа
    runs-on: ubuntu-22.04         # Версия ОС машины, на которой будет выполняться задача
    steps:                        # Шаги, которые будут выполняться в процессе
      - name: Checkout            # Имя шага
        uses: actions/checkout@v3 # Шаблон GitHub - Доступ к содержимому репозитория
        
      - name: Login to Docker Hub    # Имя шага
        uses: docker/login-action@v3 # Шаблон GitHub - Доступ в Doсker Hub 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # Логин в Doсker Hub
          password: ${{ secrets.DOCKERHUB_TOKEN }}    # Пароль в Doсker Hub

      - name: Set up Docker Buildx          # Имя шага
        uses: docker/setup-buildx-action@v3 # Шаблон GitHub - Сборка содержимого репозитория

      - name: Extract version from commit messages # Имя шага
        run: |                                     # Назначение переменно 
          VERSION=$(git log -1 --pretty=format:%B)
          if [[ ! -z "$VERSION" ]]; then
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "No version found in the commit message"
            exit 1
          fi

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE }}:${{ env.VERSION }}

  deploy:                      # Задачи публикации, которые будут выполняться в рамках конвеера
    needs: build-and-push      # Зависимости между заданиями
    name: Deploy to Kubernetes # Имя задачи - Публикация в Кубернетес
    if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04      # Версия ОС машины, на которой будет выполняться задача
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Configure Kubernetes
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}

      - name: Extract version from commit messages
        run: |
          VERSION=$(git log -1 --pretty=format:%B)
          if [[ ! -z "$VERSION" ]]; then
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "No version found in the commit message"
            exit 1
          fi

      - name: Replace image tag in deployment.yaml # Замена тэга в файле deployment.yaml
        if: env.DEPLOY == 'false'
        run: |
          sed -i "s|image: slavazakariev/nginx-app:.*|image: ${{ env.IMAGE }}|" ./nginx-app/deployment.yaml
        env:
          IMAGE_TAG: slavazakariev/nginx-app:${{ env.VERSION }}
      
      - name: Create kubeconfig file
        run: mkdir -p $HOME/.kube/   # Создание каталога для файла аутентификации Кубернетеса

      - name: Authenticate to Kubernetes cluster 
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: echo "${KUBE_CONFIG_DATA}" > ${HOME}/.kube/config
 
      - name: Apply Kubernetes manifest
        run: kubectl apply -f ./nginx-app/deployment.yaml # Запуск приложения в Кубернетесе
