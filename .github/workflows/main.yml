name: CI/CD Pipeline for nginx-app # Имя конвеера

on:                   # Триггер, по которому будет запускаться конвеер
  push:               # Запускает рабочий процесс по событиям push/pull запроса
    branches: [main]  # Ветка куда обращаемся
    tags: 
      - 'v*'

env:                  # Описание переменных
  IMAGE_TAG: slavazakariev/nginx-app
  RELEASE_NAME: nginx-app
  NAMESPACE: monitoring

jobs:                             # Задачи, которые будут выполняться в рамках конвеера
  build-and-push:                 # Тип задачи - Сборка и Публикация
    name: Build Docker image      # Имя задачи
    runs-on: ubuntu-22.04         # Тип виртуальной машины, на которой будет выполняться задача
    steps:                        # Шаги, которые будут выполняться в процессе
      - name: Checkout            # Имя шага
        uses: actions/checkout@v4 # Команда bash или предоставляемый шаблон команд от GitHub
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Extract version from commit messages
        run: |
      - name: Extract version from tag or commit message
        run: |
          echo "GITHUB_REF: ${GITHUB_REF}"
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(git log -1 --pretty=format:%B | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' || echo "")
          fi
          if [[ -z "$VERSION" ]]; then
            echo "No version found in the commit message or tag"
            exit 1
          fi
          VERSION=${VERSION//[[:space:]]/}  # Remove any spaces
          echo "Using version: $VERSION"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_TAG }}:${{ env.VERSION }}

  deploy:
    needs: build-and-push
    name: Deploy to Kubernetes
    if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/1')
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Configure Kubernetes
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}

      - name: Extract version from commit messages
        run: |
          echo "GITHUB_REF: ${GITHUB_REF}"
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(git log -1 --pretty=format:%B | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' || echo "")
          fi
          if [[ -z "$VERSION" ]]; then
            echo "No version found in the commit message or tag"
            exit 1
          fi
          VERSION=${VERSION//[[:space:]]/}  # Remove any spaces
          echo "Using version: $VERSION"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Replace image tag in deployment.yaml
        if: env.DEPLOY == 'false'
       
        run: |
          sed -i "s|image: slavazakariev/nginx-app:.*|image: ${{ env.IMAGE_TAG }}|" ./nginx-app/deployment.yaml
        env:
          IMAGE_TAG: slavazakariev/nginx-app:${{ env.VERSION }}
      
      - name: Create kubeconfig
        run: |
          mkdir -p $HOME/.kube/
      - name: Authenticate to Kubernetes cluster
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          echo "${KUBE_CONFIG_DATA}" > ${HOME}/.kube/config
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f ./nginx-app/deployment.yaml
